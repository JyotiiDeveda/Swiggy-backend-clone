paths:
  /restaurants:
    post:
      tags:
        - Restaurants
      summary: Create a new restaurant
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                category:
                  type: string
                  enum:
                    - veg
                    - non-veg
                    - both
                address:
                  type: object
                  properties:
                    city:
                      type: string
                    state:
                      type: string
                    pincode:
                      type: string
      responses:
        '201':
          description: Restaurant created successfully
        '400':
          description: Bad Request

    get:
      tags:
        - Restaurants
      summary: Fetch all restaurants
      parameters:
        - name: city
          in: query
          schema:
            type: string
            example: 'Metropolis'
          description: Filter by city
      responses:
        '200':
          description: List of restaurants fetched successfully

        '404':
          description: No restaurants found

  /restaurants/{id}:
    get:
      tags:
        - Restaurants
      summary: Fetch a restaurant by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: '123'
      responses:
        '200':
          description: Restaurant details
          content:
            application/json:
              schema:
        '404':
          description: Restaurant not found
          content:
            application/json:
              schema:

    put:
      tags:
        - Restaurants
      summary: Update a restaurant
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: '123'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                category:
                  type: string
                  enum:
                    - veg
                    - non-veg
                    - both
                address:
                  type: object
                  properties:
                    city:
                      type: string
                    state:
                      type: string
                    pincode:
                      type: string

      responses:
        '200':
          description: Restaurant updated successfully
          content:
            application/json:
              schema:
        '404':
          description: Restaurant not found
          content:
            application/json:
              schema:

    delete:
      tags:
        - Restaurants
      summary: Delete a restaurant
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: '123'
      responses:
        '204':
          description: Restaurant deleted successfully
        '404':
          description: Restaurant not found
          content:
            application/json:
              schema:

  /restaurants/{id}/dishes:
    get:
      tags:
        - Dishes
      summary: Fetch all dishes for a restaurant
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: '123'
      responses:
        '200':
          description: List of dishes
          content:
            application/json:
              schema:
                type: array
                items:
        '404':
          description: No dishes found
          content:
            application/json:
              schema:

    post:
      tags:
        - Dishes
      summary: Add a dish to a restaurant
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: '123'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                category:
                  type: string
                price:
                  type: number
                  format: float
      responses:
        '201':
          description: Dish added successfully
          content:
            application/json:
              schema:
        '400':
          description: Invalid request
          content:
            application/json:
              schema:

  /restaurants/{id}/ratings:
    post:
      tags:
        - Ratings
      summary: Rate a restaurant
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: '123'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rating:
                  type: number
                  format: float
                  minimum: 1
                  maximum: 5
              required:
                - rating
      responses:
        '201':
          description: Restaurant rated successfully
        '400':
          description: Invalid request
        '404':
          description: Restaurant not found

  /restaurants/{restaurantId}/ratings/{ratingId}:
    delete:
      tags:
        - Ratings
      summary: Delete a restaurant rating
      security:
        - BearerAuth: []
      parameters:
        - name: restaurantId
          in: path
          required: true
          schema:
            type: string
            example: '123'
        - name: ratingId
          in: path
          required: true
          schema:
            type: string
            example: '456'
      responses:
        '204':
          description: Rating deleted successfully
        '404':
          description: Rating not found

  /restaurants/{restaurantId}/dishes/{dishId}:
    get:
      tags:
        - Dishes
      summary: Get a dish by ID
      parameters:
        - name: restaurantId
          in: path
          required: true
          schema:
            type: string
            example: '123'
        - name: dishId
          in: path
          required: true
          schema:
            type: string
            example: '456'
      responses:
        '200':
          description: Dish details fetched successfully
        '404':
          description: Dish not found

    put:
      tags:
        - Dishes
      summary: Update a dish
      security:
        - BearerAuth: []
      parameters:
        - name: restaurantId
          in: path
          required: true
          schema:
            type: string
            example: '123'
        - name: dishId
          in: path
          required: true
          schema:
            type: string
            example: '456'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                category:
                  type: string
                price:
                  type: number
                  format: float
              required:
                - name
                - category
                - price
      responses:
        '200':
          description: Dish updated successfully
        '404':
          description: Dish not found

  /images:
    patch:
      tags:
        - Images
      summary: Upload an image for restaurant or dish
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                entityType:
                  type: string
                  enum:
                    - dish
                    - restaurant
                entityId:
                  type: string
                image:
                  type: string
                  format: binary
              required:
                - image
      responses:
        '200':
          description: Image uploaded successfully
        '404':
          description: Restaurant not found
