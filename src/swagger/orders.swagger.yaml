paths:
  /orders:
    get:
      tags:
        - Orders
      summary: Get all unassigned orders
      description: Retrieve a list of orders that are not yet assigned to a delivery partner.
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
            example: 1
          description: Page number for pagination.
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
            example: 10
          description: Number of records per page.
        - name: restaurantId
          in: query
          description: Get orders of a specific restaurant
          schema:
            type: string
      responses:
        '200':
          description: Successfully fetched unassigned orders.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /orders/{id}/assign-order:
    patch:
      tags:
        - Orders
      summary: Assign an order to a delivery partner
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the order to assign
          schema:
            type: string
            example: '12345'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: The user ID of the delivery partner to assign the order to
                  example: '67890'
              required:
                - userId
      responses:
        '200':
          description: Order successfully assigned to the delivery partner
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Assigned order successfully'
                  data:
                    type: object
                    description: Details of the assigned order
        '403':
          description: Unauthorized access to assign order
        '404':
          description: Order or delivery partner not found

  /orders/{id}/update-status:
    patch:
      tags:
        - Orders
      summary: Update the status of an order
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the order to update
          schema:
            type: string
            example: '12345'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: New status for the order
                  enum:
                    - preparing
                    - delivered
                    - cancelled
                  example: 'delivered'
              required:
                - status
      responses:
        '200':
          description: Order status successfully updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Updated order status successfully'
                  data:
                    type: object
                    description: Details of the updated order
        '403':
          description: Unauthorized access to update order status
        '404':
          description: Order not found
